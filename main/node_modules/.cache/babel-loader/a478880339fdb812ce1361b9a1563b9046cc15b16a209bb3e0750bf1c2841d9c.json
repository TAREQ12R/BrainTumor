{"ast":null,"code":"var _jsxFileName = \"/Users/tariq/Downloads/BrainTumorProject/main/src/components/Services/Services.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Services/Services.css\";\nimport Tesseract from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleImageDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file));\n      extractText(file);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const extractText = file => {\n    setLoading(true);\n    setResult(\"\"); // Reset result before starting new processing\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => {\n      setResult(text);\n    }).catch(error => {\n      console.error(\"Error extracting text:\", error);\n      setResult(\"Failed to extract text. Please try again.\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"services-title\",\n          children: \"Upload and Process Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services-drag-drop\",\n          onDrop: handleImageDrop,\n          onDragOver: handleDragOver,\n          children: [image ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image uploaded! Drop a new one to replace it.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & Drop your image here or click to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                setImage(URL.createObjectURL(file));\n                extractText(file);\n              }\n            },\n            className: \"services-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services-image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Uploaded Preview\",\n            className: \"services-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"services-loading-text\",\n            children: \"Processing... Please wait.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this) : result && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services-result-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"KDZpVF4dgcaKSeTKSHGK6X87vCI=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","Services","_s","image","setImage","result","setResult","loading","setLoading","handleImageDrop","event","preventDefault","file","dataTransfer","files","URL","createObjectURL","extractText","handleDragOver","recognize","then","data","text","catch","error","console","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","type","accept","onChange","e","target","src","alt","_c","$RefreshReg$"],"sources":["/Users/tariq/Downloads/BrainTumorProject/main/src/components/Services/Services.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Services/Services.css\";\nimport Tesseract from \"tesseract.js\";\n\nconst Services = () => {\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleImageDrop = (event) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file));\n      extractText(file);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const extractText = (file) => {\n    setLoading(true);\n    setResult(\"\"); // Reset result before starting new processing\n    Tesseract.recognize(file, \"eng\")\n      .then(({ data: { text } }) => {\n        setResult(text);\n      })\n      .catch((error) => {\n        console.error(\"Error extracting text:\", error);\n        setResult(\"Failed to extract text. Please try again.\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"services-container\">\n        <div className=\"services-card\">\n          <h3 className=\"services-title\">Upload and Process Image</h3>\n\n          {/* منطقة السحب والإفلات */}\n          <div\n            className=\"services-drag-drop\"\n            onDrop={handleImageDrop}\n            onDragOver={handleDragOver}\n          >\n            {image ? (\n              <p>Image uploaded! Drop a new one to replace it.</p>\n            ) : (\n              <p>Drag & Drop your image here or click to upload</p>\n            )}\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => {\n                const file = e.target.files[0];\n                if (file) {\n                  setImage(URL.createObjectURL(file));\n                  extractText(file);\n                }\n              }}\n              className=\"services-input\"\n            />\n          </div>\n\n          {/* عرض الصورة */}\n          {image && (\n            <div className=\"services-image-container\">\n              <img\n                src={image}\n                alt=\"Uploaded Preview\"\n                className=\"services-image\"\n              />\n            </div>\n          )}\n\n          {/* عرض النص المستخرج */}\n          {loading ? (\n            <div className=\"services-result-container\">\n              <p className=\"services-loading-text\">\n                Processing... Please wait.\n              </p>\n            </div>\n          ) : (\n            result && (\n              <div className=\"services-result-container\">\n                <h4>Results:</h4>\n                <p>{result}</p>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}